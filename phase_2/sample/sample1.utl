int balance;
int tick_counts = 0;

void OnInit(Trade t3)
{
    // Just set some variables
    Order o3 = Order(SELL, 100, 100, 10);
}
void OnStart (Trade t1) throw Exception
{
    /*Update predefined variables in each tick, and based on policies
    that you have set the Orders are generated. */
    if (tick_counts > 5)
    {
        RefreshRate();
        tick_counts = 0;
    }

    float low = t1.Bid;
    double high = t1.Ask;
    float[2] predict;
    Candle [100] samples = GetCandle(100);
    float[100] maxSamples;
    for(int i=0; i==100; i++)
    {
        maxSamples[100-i] = samples[i].High;
    }
    //linear regression algorithm
    float Stoploss = 100;
    float TakeProfit = 250;
    float amount = 20;
    Order o1 = Order(BUY, Stoploss, TakeProfit, amount);
    if (predict[0] * 101 + predict[1] > 50000)
        o1.Open();

    float profit_ratio = TakeProfit/amount;
    while(profit_ratio > 5)
    {
        if (profit_ratio < 7)
        {
            o1.Close();
            break;
        }
        else
        {
            continue;
        }
    }
}
void OnStart(Trade t2)
{
    tick_counts ++;
}
void OnStart(Trade t3) throw Exception //throws
{
    GetCandle(100); // will not throw an exception if 100<tick_counts
}

void Main()
{
    try
    {
        Connect("username", "password");
        Trade t1 = Observe("USDETH");
        Trade t2 = Observe("");
        Trade t3 = Observe("IRRETH");
    }
    catch Exception e
    {
        if (e.Type == 1)
            Print("Login Failure!");
    }
    //@schedule (t1 parallel t2) preorder (t3 parallel t4);
}
